{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TasksList.js","components/App.js","index.js"],"names":["AddTask","state","value","checked","defaultDate","Date","toISOString","slice","handleChange","e","target","type","setState","handleClick","length","alert","props","addTasks","minDate","maxDate","className","htmlFor","id","placeholder","name","this","onChange","autoComplete","min","max","onClick","React","Component","Task","showTask","setTimeout","task","text","date","important","active","finishDate","classesItem","push","join","change","delete","finish","toLocaleDateString","TasksList","tasks","filter","done","sort","a","b","toLowerCase","activeTasks","map","key","doneTasks","App","counter","deleteTask","index","findIndex","splice","changeTasksStatus","Array","from","forEach","getTime","addTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0be9b2e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AddTask.css'\r\n\r\nclass AddTask extends React.Component {\r\n  state = {\r\n    value: '',\r\n    checked: false,\r\n    defaultDate: new Date().toISOString().slice(0, 10)\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.type === 'text') {\r\n      this.setState({\r\n        value: e.target.value\r\n      })\r\n    } else if (e.target.type === 'checkbox') {\r\n      this.setState({\r\n        checked: e.target.checked\r\n      })\r\n    } else if (e.target.type === 'date') {\r\n      this.setState({\r\n        defaultDate: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { value, defaultDate, checked } = this.state\r\n    if (value.length <= 2) return alert('Za krótkie zadanie!')\r\n    const add = this.props.addTasks(value, defaultDate, checked)\r\n    if (add) {\r\n      this.setState({\r\n        value: '',\r\n        checked: false\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const minDate = new Date().toISOString().slice(0, 10)\r\n    let maxDate = minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n    return (\r\n      <>\r\n        <div className='form'>\r\n          <label htmlFor=\"text\">\r\n            <input\r\n              id='text'\r\n              type=\"text\"\r\n              placeholder='Dodaj Zadanie...'\r\n              name='text'\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"date\"> Zrobić do\r\n          <input\r\n              id='date'\r\n              type=\"date\"\r\n              name='date'\r\n              min={minDate}\r\n              max={maxDate}\r\n              value={this.state.defaultDate}\r\n              onChange={this.handleChange} />\r\n          </label>\r\n\r\n          <label htmlFor=\"checkbox\"> Priorytet\r\n            <input\r\n              id='checkbox'\r\n              type=\"checkbox\"\r\n              name='checkbox'\r\n              checked={this.state.checked}\r\n              onChange={this.handleChange} />\r\n          </label>\r\n\r\n        </div>\r\n        <button className='addTaskBtn' onClick={this.handleClick} >DODAJ</button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React, { Component } from 'react'\r\n\r\nclass Task extends Component {\r\n  state = {\r\n    showTask: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showTask: true,\r\n      })\r\n    }, 200);\r\n  }\r\n\r\n  render() {\r\n    const { id, text, date, important, active, finishDate } = this.props.task;\r\n\r\n    const classesItem = ['listItem'];\r\n    if (this.state.showTask) classesItem.push('showTask')\r\n\r\n    if (active) {\r\n      return (\r\n        <div className={classesItem.join(' ')}>\r\n          <p>{important ? <strong className='important'>{text}</strong> : <strong>{text}</strong>}<span className='dateSpan'>{date}</span>\r\n            <button onClick={() => this.props.change(id)}>ZROBIONE</button>\r\n            <button onClick={() => this.props.delete(id)}>X</button></p>\r\n        </div>\r\n      )\r\n    } else {\r\n      const finish = new Date(finishDate).toLocaleDateString()\r\n      return (\r\n        <div className={classesItem.join(' ')}>\r\n          <p><strong>{text}</strong> <span className='dateSpan'>( zrobić do {date} ) </span>\r\n            <span className='dateSpan'>Potwierdzone wykonanie {finish}  </span>\r\n            <button onClick={() => this.props.delete(id)}>X</button></p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Task","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst TasksList = (props) => {\r\n\r\n  const active = props.tasks.filter(task => task.active === true)\r\n\r\n  const done = props.tasks.filter(task => task.active === false)\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n  }\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n\r\n      a = a.finishDate\r\n      b = b.text.finishDate\r\n\r\n      if (a > b) return -1;\r\n      if (a < b) return 1;\r\n      return 0;\r\n    })\r\n  }\r\n\r\n  const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n\r\n  const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change} />)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <hr />\r\n      <div className=\"active\">\r\n        <h1>Zadania do zrobienia</h1>\r\n        {activeTasks.length > 0 ? activeTasks : <p>Brak zadań do wykonania!</p>}\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"done\">\r\n        <h3>Zadania zrobione <span className='spanColor'>({doneTasks.length})</span></h3>\r\n        {doneTasks.length > 5 ? <span className='spanColor'>Wyświetlono 5 ostatnio wykonanych zadań.</span> : null}\r\n        {doneTasks.length > 0 ? doneTasks.slice(0, 5) : <p>Nie masz wykonanych zdań!</p>}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksList\r\n","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TasksList from './TasksList'\nimport './App.css';\n\nclass App extends Component {\n  counter = 0;\n\n  state = {\n    tasks: []\n  }\n\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks]\n    const index = tasks.findIndex(task =>\n      task.id === id\n    )\n    tasks.splice(index, 1)\n    return (\n      this.setState({\n        tasks\n      })\n    )\n  }\n\n  changeTasksStatus = (id) => {\n    let tasks = Array.from(this.state.tasks)\n\n    tasks.forEach((task) => {\n      if (id === task.id) {\n        task.active = false;\n        task.finishDate = new Date().getTime()\n      }\n    })\n    return this.setState({\n      tasks\n    })\n  }\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text: text,\n      date: date,\n      important: important,\n      active: true,\n      finishDate: null\n    }\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n\n    this.counter++\n    return true\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h1>ToDoApp</h1>\n        <AddTask addTasks={this.addTask} />\n        <TasksList tasks={this.state.tasks} change={this.changeTasksStatus} delete={this.deleteTask} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}